d,k = map(int,input().split())
D =[(0,0)] * 31


def fibo(n):
    D[1] = (1, 0)
    D[2] = (0, 1)

    if n > 30 :
        return False
    if D[n] != (0,0):
        return D[n]
    D[n] = fibo(n-1)[0]+fibo(n-2)[0] , fibo(n-1)[1] + fibo(n-2)[1]
    return D[n]


def solution(d,k):
    rate1,rate2= fibo(d)
    for A in range(1,k):
        temp = k - A * rate1
        if temp % rate2 == 0 :
            B = temp // rate2
            if A < B :
                return A,B


A,B = solution(d,k)
print(A)
print(B)


##문제의 쟁점
- 피보나치 수열의 역순 계산
 => 수열의 1,2번째 값의 비율을 튜플형식으로 대체 해서 n번째 수열 값을 1,2 번째 값의 비율로 표현
 
##배운점
- DP유형에서 리스트 혹은 튜플로 DP테이블을 구성할 수 있음
